// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testproject.api.Data;

#nullable disable

namespace testproject.api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("testproject.api.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"), 1L, 1);

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DeptId");

                    b.HasIndex("ManagerId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("testproject.api.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId");

                    b.HasIndex("DeptId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleID");

                    b.ToTable("employee");

                    b.HasData(
                        new
                        {
                            EmpId = 1,
                            Email = "john@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "doe100",
                            RoleID = 3,
                            Status = true,
                            TelNo = "555-555-5555"
                        });
                });

            modelBuilder.Entity("testproject.api.Models.HR", b =>
                {
                    b.Property<int>("HRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRId"), 1L, 1);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("HRId");

                    b.HasIndex("EmpId");

                    b.ToTable("hr");

                    b.HasData(
                        new
                        {
                            HRId = 1,
                            EmpId = 1
                        });
                });

            modelBuilder.Entity("testproject.api.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"), 1L, 1);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("ManagerId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("manager");
                });

            modelBuilder.Entity("testproject.api.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "Employee"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            RoleID = 3,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("testproject.api.Models.Department", b =>
                {
                    b.HasOne("testproject.api.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("testproject.api.Models.Employee", b =>
                {
                    b.HasOne("testproject.api.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("testproject.api.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("testproject.api.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("testproject.api.Models.HR", b =>
                {
                    b.HasOne("testproject.api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("testproject.api.Models.Manager", b =>
                {
                    b.HasOne("testproject.api.Models.Employee", "Employee")
                        .WithOne()
                        .HasForeignKey("testproject.api.Models.Manager", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
